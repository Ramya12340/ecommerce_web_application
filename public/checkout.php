<?php 
session_start();
include '../config/db_connection.php';  // Include your database connection

// Check if the user is logged in
if (!isset($_SESSION['user_id'])) {
    echo "Please log in to proceed to checkout.";
    exit();
}

// Fetch items from the user's shopping cart
$sql = "SELECT p.product_id, p.name, p.price, sc.quantity
        FROM Shopping_Cart sc
        JOIN Products p ON sc.product_id = p.product_id
        WHERE sc.user_id = ?";
$stmt = $pdo->prepare($sql);
$stmt->execute([$_SESSION['user_id']]);
$cart_items = $stmt->fetchAll();

// Calculate total price and prepare order items for insertion
$total_price = 0;
$order_items = []; // This will store the items to be inserted into the Orders table

foreach ($cart_items as $item) {
    $item_total = $item['price'] * $item['quantity'];
    $total_price += $item_total;

    // Store item data for order insertion
    $order_items[] = [
        'product_id' => $item['product_id'],
        'quantity' => $item['quantity'],
        'price' => $item['price']
    ];
}

// Include Stripe's PHP library
require '../vendor/autoload.php';  // Make sure the path is correct

// Set your secret key (from your Stripe dashboard)
\Stripe\Stripe::setApiKey('sk_test_51QC8tCP0TA8Yk5gcguAohI1z1P8dcRJYfvB5alfxPnpb7BTyJhu2d7P5AGqdlqkwHKoYtf3r1rN0R54y9oY2PQGf00vWQJptUg'); // Your test secret key

if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $token = $_POST['stripeToken']; // Get the token generated by Stripe.js

    // Charge the customer
    try {
        $charge = \Stripe\Charge::create([
            'amount' => $total_price * 100, // Amount in cents
            'currency' => 'usd',
            'source' => $token,
            'description' => 'Order Payment',
        ]);

        // If charge is successful, save the order to the database
        $sql_order = "INSERT INTO Orders (user_id, total_price, shipping_address, shipment_details) VALUES (?, ?, ?, ?)";
        $stmt_order = $pdo->prepare($sql_order);
        $stmt_order->execute([
            $_SESSION['user_id'], 
            $total_price, 
            $_POST['shipping_address'], 
            $_POST['shipment_details']
        ]);

        // Get the last inserted order ID
        $order_id = $pdo->lastInsertId();

        // Now insert order items into the Order_Items table
        foreach ($order_items as $item) {
            $sql_order_items = "INSERT INTO Order_Items (order_id, product_id, quantity, price) VALUES (?, ?, ?, ?)";
            $stmt_order_items = $pdo->prepare($sql_order_items);
            $stmt_order_items->execute([$order_id, $item['product_id'], $item['quantity'], $item['price']]);
        }

        // Clear the shopping cart after successful payment
        $clear_cart_sql = "DELETE FROM Shopping_Cart WHERE user_id = ?";
        $stmt_clear_cart = $pdo->prepare($clear_cart_sql);
        $stmt_clear_cart->execute([$_SESSION['user_id']]);

        // Set the last order ID in the session for confirmation page
        $_SESSION['last_order_id'] = $order_id;

        // Redirect to order confirmation page
        header('Location: order_confirmation.php');
        exit();

    } catch (\Stripe\Exception\CardException $e) {
        echo "Payment failed: " . $e->getMessage();
    }
}
?>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Checkout</title>
    <link rel="stylesheet" href="../public/styles.css"> <!-- Link to the external CSS file -->
</head>
<body>
    <div class="container">
        <h1>Checkout</h1>

        <h2>Shipping Details</h2>
        <form action="checkout.php" method="POST" id="payment-form">
            <label for="shipping_address">Shipping Address:</label>
            <input type="text" name="shipping_address" required>

            <label for="shipment_details">Shipment Details:</label>
            <textarea name="shipment_details" rows="4" required></textarea>

            <h2>Your Order Summary</h2>
            <table>
                <tr>
                    <th>Product Name</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Total</th>
                </tr>
                <?php foreach ($cart_items as $item) { 
                    $item_total = $item['price'] * $item['quantity'];
                ?>
                <tr>
                    <td><?php echo htmlspecialchars($item['name']); ?></td>
                    <td><?php echo htmlspecialchars($item['quantity']); ?></td>
                    <td>$<?php echo number_format($item['price'], 2); ?></td>
                    <td>$<?php echo number_format($item_total, 2); ?></td>
                </tr>
                <?php } ?>
                <tr>
                    <td colspan="3">Total Price</td>
                    <td>$<?php echo number_format($total_price, 2); ?></td>
                </tr>
            </table>

            <div id="card-element"></div> <!-- A Stripe Element will be inserted here. -->
            <button type="submit">Place Order</button>
            <input type="hidden" name="total_price" value="<?php echo $total_price; ?>">
        </form>

        <!-- Include Stripe.js -->
        <script src="https://js.stripe.com/v3/"></script>
        <script>
            var stripe = Stripe('pk_test_51QC8tCP0TA8Yk5gcTU72kG5HInOaiIF319Qi7pxhJh3G2Zo89tD7gyE0p76XriY8PrakwL44sG5DBWm5UbLujoPy00nVf21FLb'); // Your publishable key
            var elements = stripe.elements();
            var cardElement = elements.create('card');
            cardElement.mount('#card-element');

            // Handle form submission
            var form = document.getElementById('payment-form');
            form.addEventListener('submit', function(event) {
                event.preventDefault();

                stripe.createToken(cardElement).then(function(result) {
                    if (result.error) {
                        // Display error in your form
                        console.error(result.error.message);
                    } else {
                        // Send the token to your server
                        var hiddenInput = document.createElement('input');
                        hiddenInput.setAttribute('type', 'hidden');
                        hiddenInput.setAttribute('name', 'stripeToken');
                        hiddenInput.setAttribute('value', result.token.id);
                        form.appendChild(hiddenInput);
                        form.submit(); // Submit the form
                    }
                });
            });
        </script>
    </div>
</body>
</html>
